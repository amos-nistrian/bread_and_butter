https://gist.github.com/TSiege/cbb0507082bb18ff7e4b

TREES
	Binary Search Tree
		- tree is build from array, order of the array builds different looking trees
		- left child is smaller than root right child is greater or equal to root
		- show worst case (sorted array)
			access
			search O(n)
			insert 
			delete
		- show average case 
			access
			search  O(lg(n))
			insert 
			delete 
		- Space complexity at worst for both cases is O(n)

	Binary Tree
		each node has utmost two children, also built from an array
	
	Heap Tree
		Heap  structure is another widely used tree structure with a specific ordering property.  There are two types of heap  - Min heap and Max heap. In a min heap the parent of a node must be smaller than the values of all its children.  Similarly in max heap the parent always have greater value compared to all its children. One common implementation of heap is Binary heap where each parent can have at most two children.

	AVL Tree or Height Balanced Tree 
		It is a variation of the Binary tree where height difference between left and right sub tree can be at most 1. If at any time they differ by more than one, rebalancing is done to restore this property. Lookup, insertion, and deletion all take O(log n) time in both the average and worst cases, where n is the number of nodes in the tree prior to the operation.

	Splay Tree
		A splay tree is a self-adjusting binary search tree with the additional property that recently accessed elements are quick to access again. All normal operations on a binary search tree are combined with one basic operation, called splaying. Splaying the tree for a certain element rearranges the tree so that the element is placed at the root of the tree.

SEARCHES
	Binary Search
		- Very effiecient when data is in sorted order

	

SORTS
	Quick Sort (java uses in Arrays.sort())
		(Move everything to )
		Quick sort picks a random element from the dataset as the pivot element, then sorts all elements smaller before that and all greater than the pivot after it.
		Then quicksort is executed on the part left of the pivot and right of it.
		- In place
		- Not stable
		- O(n) space complexity
		https://www.geeksforgeeks.org/quick-sort/

	Merge Sort
		https://www.geeksforgeeks.org/merge-sort/
		-Needs 
		-Stable
		-Space complexity O(n), Good Explanation: https://www.quora.com/Algorithms-How-does-merge-sort-have-space-complexity-O-n-for-worst-case

	Bubble Sort
		(adjacent comparitive sort)
		https://www.geeksforgeeks.org/bubble-sort/

	Insertion Sort
		deck of cards sort
		-in place?



DATA STRUCTURES

BITWISE
	XOR
	AND

RECURSION

DATASTRUCTURES
	Hashmap
	Linked-List
	Array
	ArrayList

SHORTEST PATHS
	Dijkstras shortest path
			https://www.geeksforgeeks.org/greedy-algorithms-set-6-dijkstras-shortest-path-algorithm/

	Bellman-Ford
		https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/tutorial/


ARRAY AND STRING PROBLEMS
http://javarevisited.blogspot.sg/2015/06/top-20-array-interview-questions-and-answers.html